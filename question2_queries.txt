% 2A
listMap([a, b, c, d], [1, 2, 3, 4], c, 3).
listMap([hello,yes], [goodbye, no], yes, X).

listMap([a, b, c, d], [1, 2, 3, 4], c, 4).
listMap([hello,yes], [goodbye, no],  a, X).

% 2B
encodeList([a, a, c, b], [a, b, c, d], [1, 2, 3, 4], [1, 1, 3, 2]).
encodeList([c, a, g, e], [a, b, c, d, e, f, g], [g, f, e, d, c, b, a],  X).

encodeList([a, a, c, b], [a, b, c, d], [1, 2, 3, 4], [1, 2, 3, 2]).
encodeList([r, a, g, e], [a, b, c, d, e, f, g], [g, f, e, d, c, b, a], X).

% 2C
% The following should succeed
consecutiveCount([a, a, c, b, b, e, g], 2).
consecutiveCount([a,  b, c, d, e, f, g], 0).
consecutiveCount([a, a, c, big, big, big, ear, gold, gold], X).
Yes with X = 4

% The following should fail
consecutiveCount([a, a, c, b, b, e, g], 1).
consecutiveCount([a, a, c, big, big, big, ear, gold, gold], 2).

% 2D
% The following should succeed
splitOnInt([45, 67, 23, 100, 0, 1578], 99, X, Y).
    Yes with X = [45, 67,23, 0] and Y =[100, 1578]
splitOnInt([24, 67, 45], 67, [24, 67, 45], []).

% The following should fail
splitOnInt([45, 67, 23, 100, 0, 1578], 99, [45, 67,0], [100, 1578, 23]).
splitOnInt([45, 67, 23, 100, 0, 1578], 99, [45, 67,0], X).

% 2E
% The following should succeed
incAverage([1, 2, 3, 4, 5],Av,Num).
    Yes with Av = 3 and Num = 5.
    
% The following should fail
incAverage([1, 2, 3, 4, 5],4,5).
incAverage([1, 2, 3, 4, 5],3,2).